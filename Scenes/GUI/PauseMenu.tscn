[gd_scene load_steps=10 format=2]

[ext_resource path="res://ui_theme.tres" type="Theme" id=1]
[ext_resource path="res://Shaders/blur.gdshader" type="Shader" id=2]
[ext_resource path="res://Scripts/GUI/PauseMenu.gd" type="Script" id=3]

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 2 )
shader_param/blur = 0.0
shader_param/brightness = 1.0

[sub_resource type="InputEventAction" id=6]
action = "pause"
pressed = true

[sub_resource type="ShortCut" id=7]
shortcut = SubResource( 6 )

[sub_resource type="Animation" id=4]
resource_name = "Pause"
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("CenterContainer:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 0.5 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/blur")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 0.5 ),
"update": 0,
"values": [ 0.0, 2.5 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/brightness")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 0.5 ),
"update": 0,
"values": [ 1.0, 0.9 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("CenterContainer:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/blur")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/brightness")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}

[sub_resource type="Animation" id=3]
resource_name = "Unpause"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("CenterContainer:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:material:shader_param/blur")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:material:shader_param/brightness")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[node name="PauseMenu" type="Control"]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 1 )
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CenterContainer" type="CenterContainer" parent="ColorRect"]
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PanelContainer" type="PanelContainer" parent="ColorRect/CenterContainer"]
margin_left = 256.0
margin_top = 172.0
margin_right = 768.0
margin_bottom = 428.0
rect_min_size = Vector2( 512, 256 )

[node name="MarginContainer" type="MarginContainer" parent="ColorRect/CenterContainer/PanelContainer"]
margin_left = 7.0
margin_top = 7.0
margin_right = 505.0
margin_bottom = 249.0
custom_constants/margin_right = 16
custom_constants/margin_left = 16
custom_constants/margin_bottom = 16
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="ColorRect/CenterContainer/PanelContainer/MarginContainer"]
margin_left = 16.0
margin_right = 482.0
margin_bottom = 226.0

[node name="Label" type="Label" parent="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer"]
margin_right = 466.0
margin_bottom = 14.0
text = "Paused"
align = 1
valign = 1

[node name="HSeparator" type="HSeparator" parent="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer"]
margin_top = 18.0
margin_right = 466.0
margin_bottom = 22.0

[node name="ResumeButton" type="Button" parent="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer"]
margin_top = 26.0
margin_right = 466.0
margin_bottom = 73.0
focus_neighbour_top = NodePath("../QuitButton")
focus_neighbour_bottom = NodePath("../RestartLevelButton")
size_flags_vertical = 3
shortcut = SubResource( 7 )
text = "Resume"

[node name="RestartLevelButton" type="Button" parent="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer"]
margin_top = 77.0
margin_right = 466.0
margin_bottom = 124.0
focus_neighbour_top = NodePath("../ResumeButton")
focus_neighbour_bottom = NodePath("../ToggleFullscreenButton")
size_flags_vertical = 3
text = "Restart Level"

[node name="ToggleFullscreenButton" type="Button" parent="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer"]
margin_top = 128.0
margin_right = 466.0
margin_bottom = 175.0
focus_neighbour_top = NodePath("../RestartLevelButton")
focus_neighbour_bottom = NodePath("../QuitButton")
size_flags_vertical = 3
text = "Toggle Fullscreen"

[node name="QuitButton" type="Button" parent="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer"]
margin_top = 179.0
margin_right = 466.0
margin_bottom = 226.0
focus_neighbour_top = NodePath("../ToggleFullscreenButton")
focus_neighbour_bottom = NodePath("../ResumeButton")
size_flags_vertical = 3
text = "Quit Game"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../ColorRect")
autoplay = "Unpause"
anims/Pause = SubResource( 4 )
anims/RESET = SubResource( 5 )
anims/Unpause = SubResource( 3 )

[connection signal="pressed" from="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer/ResumeButton" to="." method="_on_ResumeButton_pressed"]
[connection signal="pressed" from="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer/RestartLevelButton" to="." method="_on_RestartLevelButton_pressed"]
[connection signal="pressed" from="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer/ToggleFullscreenButton" to="." method="_on_ToggleFullscreenButton_pressed"]
[connection signal="pressed" from="ColorRect/CenterContainer/PanelContainer/MarginContainer/VBoxContainer/QuitButton" to="." method="_on_QuitButton_pressed"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
