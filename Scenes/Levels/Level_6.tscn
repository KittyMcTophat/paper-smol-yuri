[gd_scene load_steps=13 format=2]

[ext_resource path="res://Scenes/Levels/BaseLevel.tscn" type="PackedScene" id=1]
[ext_resource path="res://Sprites/Backgrounds/Sky with Sun.png" type="Texture" id=2]
[ext_resource path="res://Scenes/Actors/Overworld/Players/Players (With Party)/SmolYuri_FullParty.tscn" type="PackedScene" id=3]
[ext_resource path="res://Scenes/Actors/Overworld/BaseActors/InteractableActor.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scenes/Actors/Overworld/InteractableActor/SmolYurisSmolCat.tscn" type="PackedScene" id=5]
[ext_resource path="res://Scenes/Actors/Overworld/Enemies/OverworldKingBowlingCube.tscn" type="PackedScene" id=6]
[ext_resource path="res://Music/Angry Bowser.WAV" type="AudioStream" id=7]
[ext_resource path="res://Music/Victory Over Bowser.WAV" type="AudioStream" id=8]
[ext_resource path="res://Scenes/GUI/Credits.tscn" type="PackedScene" id=9]
[ext_resource path="res://Scenes/Objects/SmolCookie.tscn" type="PackedScene" id=10]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

signal music_over;

export var win_music : AudioStream = null;

func _on_OverworldEnemy_battle_end():
	MusicManager.change_music(win_music);
	
	yield(MusicManager.current_music_player, \"finished\");
	
	emit_signal(\"music_over\");
"

[sub_resource type="GDScript" id=2]
script/source = "extends Node

signal check_passed;
signal check_failed;

export var cats_needed : int = 7;

func check():
	var cats_found : int = 0;
	
	for key in Global.cats_found.keys():
		if Global.cats_found[key]:
			cats_found += 1;
	
	print(\"Cat check performed with \" + str(cats_found) + \" cats found\");
	
	if cats_found >= cats_needed:
		emit_signal(\"check_passed\");
		print(\"Cat check passed\");
	else:
		emit_signal(\"check_failed\");
		print(\"Cat check failed\");
"

[node name="LevelController" instance=ExtResource( 1 )]
background_texture = ExtResource( 2 )
overworld_music = ExtResource( 7 )
battle_music = ExtResource( 7 )

[node name="OverworldEnemy" parent="Overworld" index="0" instance=ExtResource( 6 )]
transform = Transform( -4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 1, 0, 0 )
collision_layer = 40

[node name="SmolYurisSmolCat" parent="Overworld" index="1" instance=ExtResource( 5 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.5, 0, 2.5 )
cat_index = 6

[node name="SmolYuri_FullParty" parent="Overworld" index="2" instance=ExtResource( 3 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, 0 )

[node name="GridMap Ground" parent="Overworld" index="3"]
data = {
"cells": PoolIntArray( 7, 0, 10, 65528, 0, 10, 65543, 0, 10, 131064, 0, 10, 131079, 0, 10, 196600, 0, 10, -196608, 0, 10, -196607, 0, 10, -196606, 0, 10, -196605, 0, 10, -196604, 0, 10, -196603, 0, 10, -196602, 0, 10, -131079, 0, 10, -131078, 0, 10, -131077, 0, 10, -131076, 0, 10, -131075, 0, 10, -131074, 0, 10, -131073, 0, 10, -131072, 0, 10, -131071, 0, 10, -131070, 0, 10, -131069, 0, 10, -131068, 0, 10, -131067, 0, 10, -131066, 0, 10, -65543, 0, 10, -65542, 0, 10, -65541, 0, 10, -65540, 0, 10, -65539, 0, 10, -65538, 0, 10, -65537, 0, 10, -65536, 0, 10, -65535, 0, 10, -65534, 0, 10, -65533, 0, 10, -65532, 0, 10, -65531, 0, 10, -65530, 0, 10, -7, 0, 10, -6, 0, 10, -5, 0, 10, -4, 0, 10, -3, 0, 10, -2, 0, 10, -1, 0, 10, 7, 1, 10, 65528, 1, 10, 65543, 1, 10, 131064, 1, 10, -196608, 1, 10, -196607, 1, 10, -196606, 1, 10, -196605, 1, 10, -196604, 1, 10, -196603, 1, 10, -196602, 1, 10, -131079, 1, 10, -131078, 1, 10, -131077, 1, 10, -131076, 1, 10, -131075, 1, 10, -131074, 1, 10, -131073, 1, 10, -131072, 1, 10, -131071, 1, 10, -131070, 1, 10, -131069, 1, 10, -131068, 1, 10, -131067, 1, 10, -131066, 1, 10, -65543, 1, 10, -65542, 1, 10, -65541, 1, 10, -65540, 1, 10, -65539, 1, 10, -65538, 1, 10, -65537, 1, 10, -65536, 1, 10, -65535, 1, 10, -65534, 1, 10, -65533, 1, 10, -65532, 1, 10, -65531, 1, 10, -65530, 1, 10, -7, 1, 10, -6, 1, 10, -5, 1, 10, -4, 1, 10, -3, 1, 10, -2, 1, 10, -1, 1, 10, 7, 2, 10, 65528, 2, 10, 65543, 2, 10, 131064, 2, 10, -196608, 2, 10, -196607, 2, 10, -196606, 2, 10, -196605, 2, 10, -196604, 2, 10, -196603, 2, 10, -196602, 2, 10, -131079, 2, 10, -131078, 2, 10, -131077, 2, 10, -131076, 2, 10, -131075, 2, 10, -131074, 2, 10, -131073, 2, 10, -131072, 2, 10, -131071, 2, 10, -131070, 2, 10, -131069, 2, 10, -131068, 2, 10, -131067, 2, 10, -131066, 2, 10, -65543, 2, 10, -65542, 2, 10, -65541, 2, 10, -65540, 2, 10, -65539, 2, 10, -65538, 2, 10, -65537, 2, 10, -65536, 2, 10, -65535, 2, 10, -65534, 2, 10, -65533, 2, 10, -65532, 2, 10, -65531, 2, 10, -65530, 2, 10, -7, 2, 10, -6, 2, 10, -5, 2, 10, -4, 2, 10, -3, 2, 10, -2, 2, 10, -1, 2, 10, 7, 3, 10, 65528, 3, 10, 65543, 3, 10, 131064, 3, 10, 131079, 3, 10, 196600, 3, 10, -196608, 3, 10, -196607, 3, 10, -196606, 3, 10, -196605, 3, 10, -196604, 3, 10, -196603, 3, 10, -196602, 3, 10, -131079, 3, 10, -131078, 3, 10, -131077, 3, 10, -131076, 3, 10, -131075, 3, 10, -131074, 3, 10, -131073, 3, 10, -131072, 3, 10, -131071, 3, 10, -131070, 3, 10, -131069, 3, 10, -131068, 3, 10, -131067, 3, 10, -131066, 3, 10, -65543, 3, 10, -65542, 3, 10, -65541, 3, 10, -65540, 3, 10, -65539, 3, 10, -65538, 3, 10, -65537, 3, 10, -65536, 3, 10, -65535, 3, 10, -65534, 3, 10, -65533, 3, 10, -65532, 3, 10, -65531, 3, 10, -65530, 3, 10, -7, 3, 10, -6, 3, 10, -5, 3, 10, -4, 3, 10, -3, 3, 10, -2, 3, 10, -1, 3, 10, 7, 4, 10, 65528, 4, 10, 65543, 4, 10, 131064, 4, 10, 131079, 4, 10, 196600, 4, 10, -196608, 4, 10, -196607, 4, 10, -196606, 4, 10, -196605, 4, 10, -196604, 4, 10, -196603, 4, 10, -196602, 4, 10, -131079, 4, 10, -131078, 4, 10, -131077, 4, 10, -131076, 4, 10, -131075, 4, 10, -131074, 4, 10, -131073, 4, 10, -131072, 4, 10, -131071, 4, 10, -131070, 4, 10, -131069, 4, 10, -131068, 4, 10, -131067, 4, 10, -131066, 4, 10, -65543, 4, 10, -65542, 4, 10, -65541, 4, 10, -65540, 4, 10, -65539, 4, 10, -65538, 4, 10, -65537, 4, 10, -65536, 4, 10, -65535, 4, 10, -65534, 4, 10, -65533, 4, 10, -65532, 4, 10, -65531, 4, 10, -65530, 4, 10, -7, 4, 10, -6, 4, 10, -5, 4, 10, -4, 4, 10, -3, 4, 10, -2, 4, 10, -1, 4, 10, 7, 5, 10, 65528, 5, 10, 65543, 5, 10, 131064, 5, 10, -196608, 5, 10, -196607, 5, 10, -196606, 5, 10, -196605, 5, 10, -196604, 5, 10, -196603, 5, 10, -196602, 5, 10, -131079, 5, 10, -131078, 5, 10, -131077, 5, 10, -131076, 5, 10, -131075, 5, 10, -131074, 5, 10, -131073, 5, 10, -131072, 5, 10, -131071, 5, 10, -131070, 5, 10, -131069, 5, 10, -131068, 5, 10, -131067, 5, 10, -131066, 5, 10, -65543, 5, 10, -65542, 5, 10, -65541, 5, 10, -65540, 5, 10, -65539, 5, 10, -65538, 5, 10, -65537, 5, 10, -65536, 5, 10, -65535, 5, 10, -65534, 5, 10, -65533, 5, 10, -65532, 5, 10, -65531, 5, 10, -65530, 5, 10, -7, 5, 10, -6, 5, 10, -5, 5, 10, -4, 5, 10, -3, 5, 10, -2, 5, 10, -1, 5, 10, 7, 6, 10, 65528, 6, 10, 65543, 6, 10, 131064, 6, 10, 131079, 6, 10, 196600, 6, 10, -196608, 6, 10, -196607, 6, 10, -196606, 6, 10, -196605, 6, 10, -196604, 6, 10, -196603, 6, 10, -196602, 6, 10, -131079, 6, 10, -131078, 6, 10, -131077, 6, 10, -131076, 6, 10, -131075, 6, 10, -131074, 6, 10, -131073, 6, 10, -131072, 6, 10, -131071, 6, 10, -131070, 6, 10, -131069, 6, 10, -131068, 6, 10, -131067, 6, 10, -131066, 6, 10, -65543, 6, 10, -65542, 6, 10, -65541, 6, 10, -65540, 6, 10, -65539, 6, 10, -65538, 6, 10, -65537, 6, 10, -65536, 6, 10, -65535, 6, 10, -65534, 6, 10, -65533, 6, 10, -65532, 6, 10, -65531, 6, 10, -65530, 6, 10, -7, 6, 10, -6, 6, 10, -5, 6, 10, -4, 6, 10, -3, 6, 10, -2, 6, 10, -1, 6, 10, 0, 7, 10, 1, 7, 10, 2, 7, 10, 3, 7, 10, 4, 7, 10, 5, 7, 10, 6, 7, 10, 7, 7, 10, 65528, 7, 10, 65529, 7, 10, 65530, 7, 10, 65531, 7, 10, 65532, 7, 10, 65533, 7, 10, 65534, 7, 10, 65535, 7, 10, 65536, 7, 10, 65537, 7, 10, 65538, 7, 10, 65539, 7, 10, 65540, 7, 10, 65541, 7, 10, 65542, 7, 10, 65543, 7, 10, 131064, 7, 10, 131065, 7, 10, 131066, 7, 10, 131067, 7, 10, 131068, 7, 10, 131069, 7, 10, 131070, 7, 10, 131071, 7, 10, 131072, 7, 10, 131075, 7, 10, 131076, 7, 10, 131078, 7, 10, 131079, 7, 10, 196600, 7, 10, 196601, 7, 10, 196603, 7, 10, 196604, 7, 10, 196607, 7, 10, 65468, 164, 1, 65536, 65527, 10, 0, 65528, 10, 1, 65528, 10, 2, 65528, 10, 3, 65528, 10, 4, 65528, 10, 5, 65528, 10, 6, 65528, 10, 7, 65528, 10, 65528, 65528, 10, 65529, 65528, 10, 65530, 65528, 10, 65531, 65528, 10, 65532, 65528, 10, 65533, 65528, 10, 65534, 65528, 10, 65535, 65528, 10, 65536, 65528, 10, 65537, 65528, 10, 65538, 65528, 10, 65539, 65528, 10, 65540, 65528, 10, 65541, 65528, 10, 65542, 65528, 10, 65543, 65528, 10, 131064, 65528, 10, 131065, 65528, 10, 131066, 65528, 10, 131067, 65528, 10, 131068, 65528, 10, 131069, 65528, 10, 131070, 65528, 10, 131071, 65528, 10, 131072, 65528, 10, 131075, 65528, 10, 131076, 65528, 10, 131078, 65528, 10, 131079, 65528, 10, 196600, 65528, 10, 196601, 65528, 10, 196603, 65528, 10, 196604, 65528, 10, 196607, 65528, 10, 7, 65529, 10, 65528, 65529, 10, 65543, 65529, 10, 131064, 65529, 10, 131079, 65529, 10, 196600, 65529, 10, -196608, 65529, 10, -196607, 65529, 10, -196606, 65529, 10, -196605, 65529, 10, -196604, 65529, 10, -196603, 65529, 10, -196602, 65529, 10, -131079, 65529, 10, -131078, 65529, 10, -131077, 65529, 10, -131076, 65529, 10, -131075, 65529, 10, -131074, 65529, 10, -131073, 65529, 10, -131072, 65529, 10, -131071, 65529, 10, -131070, 65529, 10, -131069, 65529, 10, -131068, 65529, 10, -131067, 65529, 10, -131066, 65529, 10, -65543, 65529, 10, -65542, 65529, 10, -65541, 65529, 10, -65540, 65529, 10, -65539, 65529, 10, -65538, 65529, 10, -65537, 65529, 10, -65536, 65529, 10, -65535, 65529, 10, -65534, 65529, 10, -65533, 65529, 10, -65532, 65529, 10, -65531, 65529, 10, -65530, 65529, 10, -7, 65529, 10, -6, 65529, 10, -5, 65529, 10, -4, 65529, 10, -3, 65529, 10, -2, 65529, 10, -1, 65529, 10, 7, 65530, 10, 65528, 65530, 10, 65543, 65530, 10, 131064, 65530, 10, -196608, 65530, 10, -196607, 65530, 10, -196606, 65530, 10, -196605, 65530, 10, -196604, 65530, 10, -196603, 65530, 10, -196602, 65530, 10, -131079, 65530, 10, -131078, 65530, 10, -131077, 65530, 10, -131076, 65530, 10, -131075, 65530, 10, -131074, 65530, 10, -131073, 65530, 10, -131072, 65530, 10, -131071, 65530, 10, -131070, 65530, 10, -131069, 65530, 10, -131068, 65530, 10, -131067, 65530, 10, -131066, 65530, 10, -65543, 65530, 10, -65542, 65530, 10, -65541, 65530, 10, -65540, 65530, 10, -65539, 65530, 10, -65538, 65530, 10, -65537, 65530, 10, -65536, 65530, 10, -65535, 65530, 10, -65534, 65530, 10, -65533, 65530, 10, -65532, 65530, 10, -65531, 65530, 10, -65530, 65530, 10, -7, 65530, 10, -6, 65530, 10, -5, 65530, 10, -4, 65530, 10, -3, 65530, 10, -2, 65530, 10, -1, 65530, 10, 7, 65531, 10, 65528, 65531, 10, 65543, 65531, 10, 131064, 65531, 10, 131079, 65531, 10, 196600, 65531, 10, -196608, 65531, 10, -196607, 65531, 10, -196606, 65531, 10, -196605, 65531, 10, -196604, 65531, 10, -196603, 65531, 10, -196602, 65531, 10, -131079, 65531, 10, -131078, 65531, 10, -131077, 65531, 10, -131076, 65531, 10, -131075, 65531, 10, -131074, 65531, 10, -131073, 65531, 10, -131072, 65531, 10, -131071, 65531, 10, -131070, 65531, 10, -131069, 65531, 10, -131068, 65531, 10, -131067, 65531, 10, -131066, 65531, 10, -65543, 65531, 10, -65542, 65531, 10, -65541, 65531, 10, -65540, 65531, 10, -65539, 65531, 10, -65538, 65531, 10, -65537, 65531, 10, -65536, 65531, 10, -65535, 65531, 10, -65534, 65531, 10, -65533, 65531, 10, -65532, 65531, 10, -65531, 65531, 10, -65530, 65531, 10, -7, 65531, 10, -6, 65531, 10, -5, 65531, 10, -4, 65531, 10, -3, 65531, 10, -2, 65531, 10, -1, 65531, 10, 7, 65532, 10, 65528, 65532, 10, 65543, 65532, 10, 131064, 65532, 10, 131079, 65532, 10, 196600, 65532, 10, -196608, 65532, 10, -196607, 65532, 10, -196606, 65532, 10, -196605, 65532, 10, -196604, 65532, 10, -196603, 65532, 10, -196602, 65532, 10, -131079, 65532, 10, -131078, 65532, 10, -131077, 65532, 10, -131076, 65532, 10, -131075, 65532, 10, -131074, 65532, 10, -131073, 65532, 10, -131072, 65532, 10, -131071, 65532, 10, -131070, 65532, 10, -131069, 65532, 10, -131068, 65532, 10, -131067, 65532, 10, -131066, 65532, 10, -65543, 65532, 10, -65542, 65532, 10, -65541, 65532, 10, -65540, 65532, 10, -65539, 65532, 10, -65538, 65532, 10, -65537, 65532, 10, -65536, 65532, 10, -65535, 65532, 10, -65534, 65532, 10, -65533, 65532, 10, -65532, 65532, 10, -65531, 65532, 10, -65530, 65532, 10, -7, 65532, 10, -6, 65532, 10, -5, 65532, 10, -4, 65532, 10, -3, 65532, 10, -2, 65532, 10, -1, 65532, 10, 7, 65533, 10, 65528, 65533, 10, 65543, 65533, 10, 131064, 65533, 10, -196608, 65533, 10, -196607, 65533, 10, -196606, 65533, 10, -196605, 65533, 10, -196604, 65533, 10, -196603, 65533, 10, -196602, 65533, 10, -131079, 65533, 10, -131078, 65533, 10, -131077, 65533, 10, -131076, 65533, 10, -131075, 65533, 10, -131074, 65533, 10, -131073, 65533, 10, -131072, 65533, 10, -131071, 65533, 10, -131070, 65533, 10, -131069, 65533, 10, -131068, 65533, 10, -131067, 65533, 10, -131066, 65533, 10, -65543, 65533, 10, -65542, 65533, 10, -65541, 65533, 10, -65540, 65533, 10, -65539, 65533, 10, -65538, 65533, 10, -65537, 65533, 10, -65536, 65533, 10, -65535, 65533, 10, -65534, 65533, 10, -65533, 65533, 10, -65532, 65533, 10, -65531, 65533, 10, -65530, 65533, 10, -7, 65533, 10, -6, 65533, 10, -5, 65533, 10, -4, 65533, 10, -3, 65533, 10, -2, 65533, 10, -1, 65533, 10, 7, 65534, 10, 65528, 65534, 10, 65543, 65534, 10, 131064, 65534, 10, -196608, 65534, 10, -196607, 65534, 10, -196606, 65534, 10, -196605, 65534, 10, -196604, 65534, 10, -196603, 65534, 10, -196602, 65534, 10, -131079, 65534, 10, -131078, 65534, 10, -131077, 65534, 10, -131076, 65534, 10, -131075, 65534, 10, -131074, 65534, 10, -131073, 65534, 10, -131072, 65534, 10, -131071, 65534, 10, -131070, 65534, 10, -131069, 65534, 10, -131068, 65534, 10, -131067, 65534, 10, -131066, 65534, 10, -65543, 65534, 10, -65542, 65534, 10, -65541, 65534, 10, -65540, 65534, 10, -65539, 65534, 10, -65538, 65534, 10, -65537, 65534, 10, -65536, 65534, 10, -65535, 65534, 10, -65534, 65534, 10, -65533, 65534, 10, -65532, 65534, 10, -65531, 65534, 10, -65530, 65534, 10, -7, 65534, 10, -6, 65534, 10, -5, 65534, 10, -4, 65534, 10, -3, 65534, 10, -2, 65534, 10, -1, 65534, 10, 7, 65535, 10, 65528, 65535, 10, 65543, 65535, 10, 131064, 65535, 10, 131079, 65535, 10, 196600, 65535, 10, -196608, 65535, 10, -196607, 65535, 10, -196606, 65535, 10, -196605, 65535, 10, -196604, 65535, 10, -196603, 65535, 10, -196602, 65535, 10, -131079, 65535, 10, -131078, 65535, 10, -131077, 65535, 10, -131076, 65535, 10, -131075, 65535, 10, -131074, 65535, 10, -131073, 65535, 10, -131072, 65535, 10, -131071, 65535, 10, -131070, 65535, 10, -131069, 65535, 10, -131068, 65535, 10, -131067, 65535, 10, -131066, 65535, 10, -65543, 65535, 10, -65542, 65535, 10, -65541, 65535, 10, -65540, 65535, 10, -65539, 65535, 10, -65538, 65535, 10, -65537, 65535, 10, -65536, 65535, 10, -65535, 65535, 10, -65534, 65535, 10, -65533, 65535, 10, -65532, 65535, 10, -65531, 65535, 10, -65530, 65535, 10, -7, 65535, 10, -6, 65535, 10, -5, 65535, 10, -4, 65535, 10, -3, 65535, 10, -2, 65535, 10, -1, 65535, 10 )
}

[node name="GridMap Spikes" parent="Overworld" index="4"]
data = {
"cells": PoolIntArray(  )
}

[node name="InteractableActors" type="Spatial" parent="Overworld" index="5"]

[node name="InteractableActor" parent="Overworld/InteractableActors" index="0" instance=ExtResource( 4 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1000, 0 )
interact_on_ready = true
only_on_first_load = true
use_export_dialogue_instead = true
exported_dialogue = "[
	{\"speaker\":\"Smol Sayori\", \"text\":\"Don't you guys think we should've leveled up by now?\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolSayori/Sad.png\"},
	
	{\"speaker\":\"Smol Yuri\", \"text\":\"That's not a thing that happens in real life...\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolYuri/Sad.png\"},
	
	{\"speaker\":\"Smol Sayori\", \"text\":\"Oh...\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolSayori/Sad.png\"},
	
	{\"speaker\":\"Smol Monika\", \"text\":\"You could say that our friendship has leveled up, though!\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolMonika/Happy.png\"},
	
	{\"speaker\":\"\", \"text\":\"Smol Yuri has reached level 2 friendship with Smol Sayori and Smol Monika!\"},
	{\"text\":\"Smol Sayori has reached level 2 friendship with Smol Yuri and Smol Monika!\"},
	{\"text\":\"Smol Monika has reached level 2 friendship with Smol Yuri and Smol Sayori!\"},
	
	{\"speaker\":\"\", \"text\":\"None of them got any new abilities though...\"},
	
	{\"speaker\":\"King Bowling Cube\", \"text\":\"Are you guys done messing around?\", \"portrait\":\"res://Sprites/DialoguePortraits/KingBowlingCube.png\"},
	{\"text\":\"I grow tired of your antics.\", \"portrait\":\"\"},
	
	{\"speaker\":\"Smol Yuri\", \"text\":\"Wait, are you the king of the bowling cubes?\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolYuri/Surprise.png\"},
	
	{\"speaker\":\"King Bowling Cube\", \"text\":\"Yeah.\", \"portrait\":\"res://Sprites/DialoguePortraits/KingBowlingCube.png\"},
	
	{\"speaker\":\"Smol Yuri\", \"text\":\"Could you maybe stop your plan to beat everyone up?\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolYuri/Happy.png\"},
	
	{\"speaker\":\"King Bowling Cube\", \"text\":\"No.\", \"portrait\":\"res://Sprites/DialoguePortraits/KingBowlingCube.png\"},
	
	{\"speaker\":\"Smol Monika\", \"text\":\"Please?\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolMonika/Sad.png\"},
	
	{\"speaker\":\"King Bowling Cube\", \"text\":\"Nah.\", \"portrait\":\"res://Sprites/DialoguePortraits/KingBowlingCube.png\"},
	
	{\"speaker\":\"Smol Monika\", \"text\":\"Okay, time for plan B!\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolMonika/Happy.png\"},
	{\"text\":\"Let's go beat this guy up!\", \"portrait\":\"\"},
]"

[node name="InteractableActor2" parent="Overworld/InteractableActors" index="1" instance=ExtResource( 4 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1000, 0 )
use_export_dialogue_instead = true
exported_dialogue = "[
	{\"speaker\":\"Smol Yuri\", \"text\":\"We did it!\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolYuri/Happy.png\"},
	{\"speaker\":\"Smol Sayori\", \"text\":\"Now no one has to get beaten up!\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolSayori/Happy.png\"},
	
	{\"speaker\":\"\",\"text\":\"- You Win! -
	Final Score: [finalscore]\", \"valign\":\"center\", \"halign\":\"center\"},
	{\"text\":\"\", \"valign\":\"top\", \"halign\":\"left\"},
]"

[node name="InteractableActor3" parent="Overworld/InteractableActors" index="2" instance=ExtResource( 4 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1000, 0 )
use_export_dialogue_instead = true
exported_dialogue = "[
	{\"speaker\":\"Smol Monika\", \"text\":\"So, what should we do now?\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolMonika/Happy.png\"},
	{\"speaker\":\"Smol Sayori\", \"text\":\"We haven't seen Smol Natsuki in a while, let's go check on her!\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolSayori/Happy.png\"},
	{\"speaker\":\"Smol Yuri\", \"text\":\"Alright, let's go look for her!\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolYuri/Happy.png\"},
	{\"speaker\":\"Smol Sayori\", \"text\":\"She'll probably be at home, we should start by heading to her smol house.\", \"portrait\":\"res://Sprites/DialoguePortraits/SmolSayori/Happy.png\"},
]"

[node name="SetMusic" type="Node" parent="Overworld" index="6"]
script = SubResource( 1 )
win_music = ExtResource( 8 )

[node name="CatCheck" type="Node" parent="Overworld" index="7"]
script = SubResource( 2 )
cats_needed = 6

[node name="Credits" parent="Overworld" index="8" instance=ExtResource( 9 )]
credits_json = "res://Credits_NoSmolNatsuki.json"

[node name="SmolCookie" parent="Overworld" index="9" instance=ExtResource( 10 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1000, 0 )
next_scene = "res://Scenes/TitleScreen.tscn"

[node name="SmolCookie2" parent="Overworld" index="10" instance=ExtResource( 10 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1000, 0 )
next_scene = "res://Scenes/Levels/SecretLevel_0.tscn"

[node name="Battle" parent="." index="1"]
visible = false

[node name="GridMap" parent="Battle" index="3"]
data = {
"cells": PoolIntArray( -196608, 0, 10, -196607, 0, 10, -196606, 0, 10, -196605, 0, 10, -196604, 0, 10, -196603, 0, 10, -196602, 0, 10, -196601, 0, 10, -196600, 0, 10, -196599, 0, 10, -131082, 0, 10, -131081, 0, 10, -131080, 0, 10, -131079, 0, 10, -131078, 0, 10, -131077, 0, 10, -131076, 0, 10, -131075, 0, 10, -131074, 0, 10, -131073, 0, 10, -131072, 0, 10, -131071, 0, 10, -131070, 0, 10, -131069, 0, 10, -131068, 0, 10, -131067, 0, 10, -131066, 0, 10, -131065, 0, 10, -131064, 0, 10, -131063, 0, 10, -65546, 0, 10, -65545, 0, 10, -65544, 0, 10, -65543, 0, 10, -65542, 0, 10, -65541, 0, 10, -65540, 0, 10, -65539, 0, 10, -65538, 0, 10, -65537, 0, 10, -65536, 0, 10, -65535, 0, 10, -65534, 0, 10, -65533, 0, 10, -65532, 0, 10, -65531, 0, 10, -65530, 0, 10, -65529, 0, 10, -65528, 0, 10, -65527, 0, 10, -65526, 0, 10, -65525, 0, 10, -65524, 0, 10, -13, 0, 10, -12, 0, 10, -11, 0, 10, -10, 0, 10, -9, 0, 10, -8, 0, 10, -7, 0, 10, -6, 0, 10, -5, 0, 10, -4, 0, 10, -3, 0, 10, -2, 0, 10, -1, 0, 10, -65536, 1, 10, -65535, 1, 10, -65534, 1, 10, -65533, 1, 10, -65532, 1, 10, -65531, 1, 10, -65530, 1, 10, -65529, 1, 10, -65528, 1, 10, -65527, 1, 10, -65526, 1, 10, -65525, 1, 10, -65524, 1, 10, -13, 1, 10, -12, 1, 10, -11, 1, 10, -10, 1, 10, -9, 1, 10, -8, 1, 10, -7, 1, 10, -6, 1, 10, -5, 1, 10, -4, 1, 10, -3, 1, 10, -2, 1, 10, -1, 1, 10, -65536, 2, 10, -65535, 2, 10, -65534, 2, 10, -65533, 2, 10, -65532, 2, 10, -65531, 2, 10, -65530, 2, 10, -65529, 2, 10, -65528, 2, 10, -65527, 2, 10, -65526, 2, 10, -65525, 2, 10, -65524, 2, 10, -13, 2, 10, -12, 2, 10, -11, 2, 10, -10, 2, 10, -9, 2, 10, -8, 2, 10, -7, 2, 10, -6, 2, 10, -5, 2, 10, -4, 2, 10, -3, 2, 10, -2, 2, 10, -1, 2, 10, -65536, 3, 10, -65535, 3, 10, -65534, 3, 10, -65533, 3, 10, -65532, 3, 10, -65531, 3, 10, -65530, 3, 10, -65529, 3, 10, -65528, 3, 10, -65527, 3, 10, -65526, 3, 10, -65525, 3, 10, -65524, 3, 10, -13, 3, 10, -12, 3, 10, -11, 3, 10, -10, 3, 10, -9, 3, 10, -8, 3, 10, -7, 3, 10, -6, 3, 10, -5, 3, 10, -4, 3, 10, -3, 3, 10, -2, 3, 10, -1, 3, 10, -65536, 4, 10, -65535, 4, 10, -65534, 4, 10, -65533, 4, 10, -65532, 4, 10, -65531, 4, 10, -65530, 4, 10, -65529, 4, 10, -65528, 4, 10, -65527, 4, 10, -65526, 4, 10, -65525, 4, 10, -65524, 4, 10, -13, 4, 10, -12, 4, 10, -11, 4, 10, -10, 4, 10, -9, 4, 10, -8, 4, 10, -7, 4, 10, -6, 4, 10, -5, 4, 10, -4, 4, 10, -3, 4, 10, -2, 4, 10, -1, 4, 10, -65536, 5, 10, -65535, 5, 10, -65534, 5, 10, -65533, 5, 10, -65532, 5, 10, -65531, 5, 10, -65530, 5, 10, -65529, 5, 10, -65528, 5, 10, -65527, 5, 10, -65526, 5, 10, -65525, 5, 10, -65524, 5, 10, -13, 5, 10, -12, 5, 10, -11, 5, 10, -10, 5, 10, -9, 5, 10, -8, 5, 10, -7, 5, 10, -6, 5, 10, -5, 5, 10, -4, 5, 10, -3, 5, 10, -2, 5, 10, -1, 5, 10, -65536, 6, 10, -65535, 6, 10, -65534, 6, 10, -65533, 6, 10, -65532, 6, 10, -65531, 6, 10, -65530, 6, 10, -65529, 6, 10, -65528, 6, 10, -65527, 6, 10, -65526, 6, 10, -65525, 6, 10, -65524, 6, 10, -13, 6, 10, -12, 6, 10, -11, 6, 10, -10, 6, 10, -9, 6, 10, -8, 6, 10, -7, 6, 10, -6, 6, 10, -5, 6, 10, -4, 6, 10, -3, 6, 10, -2, 6, 10, -1, 6, 10, 0, 65534, 10, 1, 65534, 10, 2, 65534, 10, 3, 65534, 10, 4, 65534, 10, 5, 65534, 10, 6, 65534, 10, 7, 65534, 10, 8, 65534, 10, 9, 65534, 10, 10, 65534, 10, 11, 65534, 10, 12, 65534, 10, 65523, 65534, 10, 65524, 65534, 10, 65525, 65534, 10, 65526, 65534, 10, 65527, 65534, 10, 65528, 65534, 10, 65529, 65534, 10, 65530, 65534, 10, 65531, 65534, 10, 65532, 65534, 10, 65533, 65534, 10, 65534, 65534, 10, 65535, 65534, 10, 65536, 65534, 10, 65538, 65534, 10, 65539, 65534, 10, 65541, 65534, 10, 65542, 65534, 10, 65544, 65534, 10, 65545, 65534, 10, 65547, 65534, 10, 65548, 65534, 10, 131059, 65534, 10, 131060, 65534, 10, 131062, 65534, 10, 131063, 65534, 10, 131065, 65534, 10, 131066, 65534, 10, 131068, 65534, 10, 131069, 65534, 10, 131071, 65534, 10, -65526, 65534, 10, -65525, 65534, 10, -65524, 65534, 10, -13, 65534, 10, -12, 65534, 10, -11, 65534, 10, -196608, 65535, 10, -196607, 65535, 10, -196606, 65535, 10, -196605, 65535, 10, -196604, 65535, 10, -196603, 65535, 10, -196602, 65535, 10, -196601, 65535, 10, -196600, 65535, 10, -196599, 65535, 10, -131082, 65535, 10, -131081, 65535, 10, -131080, 65535, 10, -131079, 65535, 10, -131078, 65535, 10, -131077, 65535, 10, -131076, 65535, 10, -131075, 65535, 10, -131074, 65535, 10, -131073, 65535, 10, -131072, 65535, 10, -131071, 65535, 10, -131070, 65535, 10, -131069, 65535, 10, -131068, 65535, 10, -131067, 65535, 10, -131066, 65535, 10, -131065, 65535, 10, -131064, 65535, 10, -131063, 65535, 10, -65546, 65535, 10, -65545, 65535, 10, -65544, 65535, 10, -65543, 65535, 10, -65542, 65535, 10, -65541, 65535, 10, -65540, 65535, 10, -65539, 65535, 10, -65538, 65535, 10, -65537, 65535, 10, -65536, 65535, 10, -65535, 65535, 10, -65534, 65535, 10, -65533, 65535, 10, -65532, 65535, 10, -65531, 65535, 10, -65530, 65535, 10, -65529, 65535, 10, -65528, 65535, 10, -65527, 65535, 10, -65526, 65535, 10, -65525, 65535, 10, -65524, 65535, 10, -13, 65535, 10, -12, 65535, 10, -11, 65535, 10, -10, 65535, 10, -9, 65535, 10, -8, 65535, 10, -7, 65535, 10, -6, 65535, 10, -5, 65535, 10, -4, 65535, 10, -3, 65535, 10, -2, 65535, 10, -1, 65535, 10 )
}

[connection signal="battle_end" from="Overworld/OverworldEnemy" to="Overworld/InteractableActors/InteractableActor2" method="_interact"]
[connection signal="battle_end" from="Overworld/OverworldEnemy" to="Overworld/SetMusic" method="_on_OverworldEnemy_battle_end"]
[connection signal="dialogue_ended" from="Overworld/InteractableActors/InteractableActor2" to="Overworld/CatCheck" method="check"]
[connection signal="dialogue_ended" from="Overworld/InteractableActors/InteractableActor3" to="Overworld/SmolCookie2" method="collect"]
[connection signal="check_failed" from="Overworld/CatCheck" to="Overworld/Credits" method="_roll_credits"]
[connection signal="check_passed" from="Overworld/CatCheck" to="Overworld/InteractableActors/InteractableActor3" method="_interact"]
[connection signal="credits_over" from="Overworld/Credits" to="Overworld/SmolCookie" method="collect"]
